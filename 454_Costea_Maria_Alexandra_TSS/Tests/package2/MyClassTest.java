package package2;

import org.junit.Rule;
import org.junit.Test;
import org.junit.contrib.java.lang.system.SystemOutRule;
import package1.MyClass;


public class MyClassTest {

    MyClass tester = new MyClass();

    @Rule
    public final SystemOutRule systemOutRule = new SystemOutRule().enableLog();

    @Test
    public void equivalencePartitioning() {

        tester.main(new String[]{"0"});
        tester.main(new String[]{"6"});
        tester.main(new String[]{"1", "0"});
        tester.main(new String[]{"1", "11"});
        tester.main(new String[]{"1", "3", "-1"});
        tester.main(new String[]{"1", "3", "110"});
        tester.main(new String[]{"1", "3", "0", "-1"});
        tester.main(new String[]{"1", "3", "0", "110"});
        tester.main(new String[]{"1", "3", "2", "2", "1", "1", "2", "2"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "100", "105", "NU"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "0", "1", "DA"});

    }

    @Test
    public void boundaryValueAnalysis() {

        tester.main(new String[]{"0"});
        tester.main(new String[]{"6"});
        tester.main(new String[]{"1", "0"});
        tester.main(new String[]{"1", "11"});
        tester.main(new String[]{"1", "1", "-1"});
        tester.main(new String[]{"1", "1", "110"});
        tester.main(new String[]{"1", "1", "0", "-1"});
        tester.main(new String[]{"1", "1", "0", "110"});
        tester.main(new String[]{"1", "1", "0", "0", "NU"});
        tester.main(new String[]{"1", "1", "109", "109", "NU"});
        tester.main(new String[]{"1", "1", "-1", "2"});
        tester.main(new String[]{"1", "1", "110", "2"});
        tester.main(new String[]{"1", "1", "0", "-1"});
        tester.main(new String[]{"1", "1", "0", "110"});
        tester.main(new String[]{"1", "10", "1", "1", "2", "2", "1", "1", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "NU"});
        tester.main(new String[]{"1", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA"});
        tester.main(new String[]{"1", "10", "0", "0", "1", "1", "2", "2", "10", "10", "13", "13", "42", "42", "53", "53", "65", "65", "67", "67", "18", "18", "NU"});
        tester.main(new String[]{"1", "10", "109", "109", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA"});
        tester.main(new String[]{"1", "10", "109", "109", "1", "1", "2", "2", "10", "10", "13", "13", "42", "42", "53", "53", "65", "65", "67", "67", "18", "18", "NU"});
        tester.main(new String[]{"5", "0"});
        tester.main(new String[]{"5", "11"});
        tester.main(new String[]{"5", "1", "-1", "3"});
        tester.main(new String[]{"5", "1", "110", "3"});
        tester.main(new String[]{"5", "1", "3", "-1"});
        tester.main(new String[]{"5", "1", "3", "110"});
        tester.main(new String[]{"5", "10", "1", "1", "2", "2", "1", "1", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "NU"});
        tester.main(new String[]{"5", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA"});
        tester.main(new String[]{"5", "10", "0", "0", "1", "1", "2", "2", "10", "10", "13", "13", "42", "42", "53", "53", "65", "65", "67", "67", "18", "18", "NU"});
        tester.main(new String[]{"5", "10", "109", "109", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA"});
        tester.main(new String[]{"5", "10", "109", "109", "1", "1", "2", "2", "10", "10", "13", "13", "42", "42", "53", "53", "65", "65", "67", "67", "18", "18", "NU"});

    }

    @Test
    public void categoryPartitioning() {

        tester.main(new String[]{"-5"});
        tester.main(new String[]{"0"});
        tester.main(new String[]{"6"});
        tester.main(new String[]{"10"});
        tester.main(new String[]{"1", "-20"});
        tester.main(new String[]{"1", "0"});
        tester.main(new String[]{"1", "11"});
        tester.main(new String[]{"1", "20"});
        tester.main(new String[]{"1", "1", "-20"});
        tester.main(new String[]{"1", "1", "-1"});
        tester.main(new String[]{"1", "1", "110"});
        tester.main(new String[]{"1", "1", "120"});
        tester.main(new String[]{"1", "1", "0", "-20"});
        tester.main(new String[]{"1", "1", "0", "-1"});
        tester.main(new String[]{"1", "1", "0", "110"});
        tester.main(new String[]{"1", "1", "0", "120"});
        tester.main(new String[]{"1", "1", "0", "0", "NU"});
        tester.main(new String[]{"1", "1", "35", "35", "NU"});
        tester.main(new String[]{"1", "1", "109", "109", "NU"});
        tester.main(new String[]{"2", "5", "0", "0", "1", "1", "2", "2", "1", "1", "3", "3", "NU"});
        tester.main(new String[]{"2", "5", "0", "0", "5", "5", "6", "6", "7", "7", "8", "8", "NU", "5", "0", "0", "4", "4", "5", "5", "6", "6", "7", "7", "NU"});
        tester.main(new String[]{"2", "5", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "DA", "5", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "DA"});
        tester.main(new String[]{"2", "5", "35", "35", "36", "36", "47", "47", "48", "48", "79", "79", "NU", "5", "47", "47", "48", "48", "79", "79", "80", "80", "81", "81", "NU"});
        tester.main(new String[]{"2", "5", "35", "35", "36", "36", "37", "37", "38", "38", "39", "39", "DA", "5", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "DA"});
        tester.main(new String[]{"2", "5", "95", "95", "96", "96", "105", "105", "106", "106", "109", "109", "NU", "5", "100", "100", "101", "101", "105", "105", "106", "106", "109", "109", "NU"});
        tester.main(new String[]{"2", "5", "105", "105", "106", "106", "107", "107", "108", "108", "109", "109", "DA", "5", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "DA"});
        tester.main(new String[]{"5", "10", "0", "0", "1", "1", "2", "2", "1", "1", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "NU"});
        tester.main(new String[]{"5", "10", "1", "1", "6", "6", "7", "7", "8", "8", "11", "11", "12", "12", "13", "13", "14", "14", "15", "15", "16", "16", "NU", "10", "0", "0", "1", "1", "13", "13", "14", "14", "15", "15", "16", "16", "28", "28", "26", "26", "35", "35", "NU", "10", "1", "1", "6", "6", "7", "7", "8", "8", "11", "11", "12", "12", "13", "13", "14", "14", "15", "15", "16", "16", "NU", "10", "0", "0", "1", "1", "6", "6", "15", "15", "28", "28", "7", "7", "8", "8", "9", "9", "36", "36", "NU", "10", "0", "0", "1", "1", "6", "6", "15", "15", "28", "28", "7", "7", "8", "8", "9", "9", "36", "36", "NU"});
        tester.main(new String[]{"5", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA"});
        tester.main(new String[]{"5", "10", "35", "35", "36", "36", "47", "47", "48", "48", "79", "79", "53", "53", "65", "65", "66", "66", "67", "67", "68", "68", "NU", "10", "50", "50", "51", "51", "47", "47", "48", "48", "79", "79", "80", "80", "81", "81", "70", "70", "89", "89", "60", "60", "NU", "10", "50", "50", "51", "51", "57", "57", "79", "79", "80", "80", "81", "81", "70", "70", "29", "29", "30", "30", "31", "31", "NU", "10", "50", "50", "51", "51", "57", "57", "79", "79", "80", "80", "81", "81", "70", "70", "29", "29", "89", "89", "32", "32", "NU", "10", "80", "80", "81", "81", "70", "70", "29", "29", "89", "89", "32", "32", "50", "50", "51", "51", "57", "57", "34", "34", "NU"});
        tester.main(new String[]{"5", "10", "35", "35", "36", "36", "37", "37", "38", "38", "39", "39", "40", "40", "41", "41", "42", "42", "43", "43", "44", "44", "DA", "10", "36", "36", "37", "37", "38", "38", "39", "39", "40", "40", "41", "41", "42", "42", "43", "43", "44", "44", "45", "45", "DA", "10", "36", "36", "37", "37", "38", "38", "39", "39", "40", "40", "41", "41", "42", "42", "43", "43", "44", "44", "45", "45", "46", "46", "DA", "10", "36", "36", "37", "37", "38", "38", "39", "39", "40", "40", "41", "41", "42", "42", "43", "43", "44", "44", "45", "45", "46", "46", "47", "47", "DA", "10", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "55", "55", "56", "56", "57", "57", "58", "58", "59", "59", "DA"});
        tester.main(new String[]{"5", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU"});
        tester.main(new String[]{"5", "10", "100", "100", "101", "101", "102", "102", "103", "103", "104", "104", "105", "105", "106", "106", "107", "107", "108", "108", "109", "109", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA", "10", "100", "100", "101", "101", "102", "102", "103", "103", "104", "104", "105", "105", "106", "106", "107", "107", "108", "108", "109", "109", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA"});

    }

    @Test
    public void statementCoverage() {

        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "100", "105", "NU"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "0", "1", "DA"});

    }

    @Test
    public void branchCoverage() {

        tester.main(new String[]{"0"});
        tester.main(new String[]{"1", "0"});
        tester.main(new String[]{"1", "1", "-1"});
        tester.main(new String[]{"1", "2", "0", "0", "0", "0"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "100", "105", "NU"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "0", "1", "DA"});

    }

    @Test
    public void conditionCoverage() {

        tester.main(new String[]{"0"});
        tester.main(new String[]{"6"});
        tester.main(new String[]{"1", "0"});
        tester.main(new String[]{"1", "11"});
        tester.main(new String[]{"1", "1", "-1"});
        tester.main(new String[]{"1", "1", "110"});
        tester.main(new String[]{"1", "1", "0", "-1"});
        tester.main(new String[]{"1", "1", "0", "110"});
        tester.main(new String[]{"1", "2", "0", "0", "0", "0"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "100", "105", "NU"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "0", "1", "DA"});

    }

    @Test
    public void circuitsCoverage() {

        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "100", "105", "NU"});
        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "0", "1", "DA"});

    }
}












































//    @Test
//    public void killMutants() {
//
//        tester.main(new String[]{"0"});
//        tester.main(new String[]{"6"});
//
//        tester.main(new String[]{"1", "0"});
//        tester.main(new String[]{"1", "11"});
//
//        tester.main(new String[]{"1", "1", "-1"});
//        tester.main(new String[]{"1", "1", "110"});
//        tester.main(new String[]{"1", "1", "0", "-1"});;
//        tester.main(new String[]{"1", "1", "0", "110"});
//        tester.main(new String[]{"1", "2", "0", "0", "0", "0"});
//
//        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "100", "105", "NU"});
//        tester.main(new String[]{"1", "5", "1", "1", "2", "2", "1", "2", "0", "0", "0", "1", "DA"});
//
//        tester.main(new String[]{"5", "0"});
//        tester.main(new String[]{"5", "11"});
//
//        tester.main(new String[]{"5", "10", "-1"});
//        tester.main(new String[]{"5", "10", "110"});
//        tester.main(new String[]{"5", "10", "0", "-1"});;
//        tester.main(new String[]{"5", "10", "0", "110"});
//        tester.main(new String[]{"5", "10", "0", "0", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8"});
//
//        tester.main(new String[]{"5", "10", "0", "0", "1", "1", "103", "103", "6", "6", "70", "70", "15", "15", "51", "51", "28", "28", "36", "36", "45", "45", "NU", "10", "0", "0", "1", "1", "103", "103", "6", "6", "70", "70", "15", "15", "51", "51", "28", "28", "36", "36", "45", "45", "NU", "10", "0", "0", "1", "1", "103", "103", "6", "6", "70", "70", "15", "15", "51", "51", "28", "28", "36", "36", "45", "45", "NU", "10", "0", "0", "1", "1", "103", "103", "6", "6", "70", "70", "15", "15", "51", "51", "28", "28", "36", "36", "45", "45", "NU", "10", "0", "0", "1", "1", "103", "103", "6", "6", "70", "70", "15", "15", "51", "51", "28", "28", "36", "36", "45", "45", "NU"});
//        tester.main(new String[]{"5", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA", "10", "0", "0", "1", "1", "2", "2", "3", "3", "4", "4", "5", "5", "6", "6", "7", "7", "8", "8", "9", "9", "DA"});
//        tester.main(new String[]{"5", "10", "50", "50", "51", "51", "57", "57", "101", "101", "63", "63", "34", "34", "70", "70", "20", "20", "89", "89", "10", "10", "NU", "10", "50", "50", "51", "51", "57", "57", "101", "101", "63", "63", "34", "34", "70", "70", "20", "20", "89", "89", "10", "10", "NU", "10", "50", "50", "51", "51", "57", "57", "101", "101", "63", "63", "34", "34", "70", "70", "20", "20", "89", "89", "10", "10", "NU", "10", "50", "50", "51", "51", "57", "57", "101", "101", "63", "63", "34", "34", "70", "70", "20", "20", "89", "89", "10", "10", "NU", "10", "50", "50", "51", "51", "57", "57", "101", "101", "63", "63", "34", "34", "70", "70", "20", "20", "89", "89", "10", "10", "NU"});
//        tester.main(new String[]{"5", "10", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "55", "55", "56", "56", "57", "57", "58", "58", "59", "59", "DA", "10", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "55", "55", "56", "56", "57", "57", "58", "58", "59", "59", "DA", "10", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "55", "55", "56", "56", "57", "57", "58", "58", "59", "59", "DA", "10", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "55", "55", "56", "56", "57", "57", "58", "58", "59", "59", "DA", "10", "50", "50", "51", "51", "52", "52", "53", "53", "54", "54", "55", "55", "56", "56", "57", "57", "58", "58", "59", "59", "DA"});
//        tester.main(new String[]{"5", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU", "10", "109", "109", "108", "108", "105", "105", "102", "102", "14", "14", "93", "93", "55", "55", "81", "81", "21", "21", "60", "60", "NU"});
//        tester.main(new String[]{"5", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA", "10", "109", "109", "108", "108", "107", "107", "106", "106", "105", "105", "104", "104", "103", "103", "102", "102", "101", "101", "100", "100", "DA"});
//
//
//        assertEquals("T < 1\n" +
//                        "T > 5\n" +
//                        "N < 1\n" +
//                        "N > 10\n" +
//                        "x < 0\n" +
//                        "x > 109\n" +
//                        "y < 0\n" +
//                        "y > 109\n" +
//                        "2 stele cu aceleasi coordonate\n" +
//                        "NU\n" +
//                        "DA\n" +
//                        "N < 1\n" +
//                        "N > 10\n" +
//                        "x < 0\n" +
//                        "x > 109\n" +
//                        "y < 0\n" +
//                        "y > 109\n" +
//                        "2 stele cu aceleasi coordonate\n" +
//                        "NU\n" + "NU\n" + "NU\n" + "NU\n" + "NU\n" +
//                        "DA\n" + "DA\n" + "DA\n" + "DA\n" + "DA\n" +
//                        "NU\n" + "NU\n" + "NU\n" + "NU\n" + "NU\n" +
//                        "DA\n" + "DA\n" + "DA\n" + "DA\n" + "DA\n" +
//                        "NU\n" + "NU\n" + "NU\n" + "NU\n" + "NU\n" +
//                        "DA\n" + "DA\n" + "DA\n" + "DA\n" + "DA\n",
//                systemOutRule.getLogWithNormalizedLineSeparator());
//
//    }


